!function(a,b){"object"==typeof module&&"object"==typeof module.exports&&(exports=module.exports=b()),"function"==typeof define&&define.amd&&define(["terraformer/terraformer"],b),"object"==typeof a.navigator&&("undefined"==typeof a.Terraformer&&(a.Terraformer={}),a.Terraformer.GeoStore=b().GeoStore)}(this,function(){function a(a,b){var c=arguments.length>2?Array.prototype.slice.call(arguments,2):null;return function(){return b.apply(a,c||arguments)}}function b(a){if(!a.store||!a.index)throw new Error("Terraformer.GeoStore requires an instace of a Terraformer.Store and a instance of Terraformer.RTree");this.deferred=a.deferred?a.deferred:c.Deferred,this.index=a.index,this.store=a.store}var c,d={};return"object"==typeof this.navigator&&(c=this.Terraformer),"object"==typeof module&&"object"==typeof module.exports&&(c=require("terraformer")),arguments[0]&&"function"==typeof define&&define.amd&&(c=arguments[0]),b.prototype.add=function(a,b){var d,e=new this.deferred;if(b&&e.then(function(a){b(null,a)},function(a){b(a,null)}),!a.type.match(/Feature/))throw new Error("Terraform.GeoStore : only Features and FeatureCollections are supported");if("Feature"===a.type&&!a.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");if("FeatureCollection"===a.type){for(var f=0;f<a.features.length;f++){var g=a.features[f];if(d=c.Tools.calculateBounds(g),!g.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");this.index.insert({x:d[0],y:d[1],w:Math.abs(d[0]-d[2]),h:Math.abs(d[1]-d[3])},g.id)}this.store.add(a,e)}else d=c.Tools.calculateBounds(a),this.index.insert({x:d[0],y:d[1],w:Math.abs(d[0]-d[2]),h:Math.abs(d[1]-d[3])},a.id),this.store.add(a,e);return e},b.prototype.remove=function(b,c){var d=new this.deferred;return c&&d.then(function(a){c(null,a)},function(a){c(a,null)}),this.get(b).then(a(this,function(c){this.index.remove(c,b,a(this,function(a){a?d.reject("Could not remove from index"):this.store.remove(b,d)}))}),function(){d.reject("Could not remove feature")}),d},b.prototype.contains=function(b,d){var e=new c.Primitive(b),f=new this.deferred;d&&f.then(function(a){d(null,a)},function(a){d(a,null)});var g=c.Tools.calculateEnvelope(e);return this.index.search(g).then(a(this,function(a){var b=[],d=0,g=0,h=function(h){d++;var i=new c.Primitive(h.geometry);e.within(i)&&b.push(h),d>=a.length&&(g?f.reject("Could not get all geometries"):f.resolve(b)),d>=a.length&&g&&f.reject("Could not get all geometries")},i=function(){d++,g++,d>=a.length&&f.reject("Could not get all geometries")};if(a.length)for(var j=0;j<a.length;j++)this.get(a[j]).then(h,i);else f.resolve(b)})),f},b.prototype.within=function(b,d){var e=new c.Primitive(b),f=new this.deferred;d&&f.then(function(a){d(null,a)},function(a){d(a,null)});var g=c.Tools.calculateEnvelope(e);return this.index.within(g).then(a(this,function(a){var b=[],d=0,g=0,h=function(h){d++;var i=new c.Primitive(h.geometry);i.within(e)&&b.push(h),d>=a.length&&(g?f.reject("Could not get all geometries"):f.resolve(b)),d>=a.length&&g&&f.reject("Could not get all geometries")},i=function(){d++,g++,d>=a.length&&f.reject("Could not get all geometries")};if(a.length)for(var j=0;j<a.length;j++)this.get(a[j]).then(h,i);else f.resolve(b)})),f},b.prototype.update=function(b,d){var e=c.Primitive(b),f=new this.deferred;if(d&&f.then(function(a){d(null,a)},function(a){d(a,null)}),"Feature"!==e.type)throw new Error("Terraform.GeoStore : only Features and FeatureCollections are supported");if(!e.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");return this.get(e.id).then(a(this,function(a){var b=new c.Primitive(a);this.index.remove(b.envelope(),b.id),this.index.insert(e.envelope(),e.id),this.store.update(e,f)}),function(){f.reject("Could find feature")}),f},b.prototype.get=function(a,b){var c=new this.deferred;return b&&c.then(function(a){b(null,a)},function(a){b(a,null)}),this.store.get(a,c),c},d.GeoStore=b,d});