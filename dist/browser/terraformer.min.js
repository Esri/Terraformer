(function(e,t){typeof module=="object"&&typeof module.exports=="object"&&(exports=module.exports=t()),typeof define=="function"&&define.amd&&define(t),typeof window=="object"&&(e.Terraformer=t())})(this,function(){function o(){this._thens=[]}function u(){var e=Array.prototype.slice.apply(arguments);typeof console!==undefined&&console.warn&&console.warn.apply(console,e)}function a(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function f(e,t){t=t||{};var n=Object.keys(t);for(var r in n)e[n[r]]=t[n[r]];return e}function l(e){switch(e.type){case"Point":return[e.coordinates[0],e.coordinates[1],e.coordinates[0],e.coordinates[1]];case"MultiPoint":return p(e.coordinates);case"LineString":return p(e.coordinates);case"MultiLineString":return c(e.coordinates);case"Polygon":return c(e.coordinates);case"MultiPolygon":return h(e.coordinates);case"Feature":return l(e.geometry);case"FeatureCollection":return d(e);case"GeometryCollection":return v(e);default:throw new Error("Unknown type: "+e.type)}}function c(e){var t=null,n=null,r=null,i=null;for(var s=0;s<e.length;s++){var o=e[s];for(var u=0;u<o.length;u++){var a=o[u],f=a[0],l=a[1];t===null?t=f:f<t&&(t=f),n===null?n=f:f>n&&(n=f),r===null?r=l:l<r&&(r=l),i===null?i=l:l>i&&(i=l)}}return[t,r,n,i]}function h(e){var t=null,n=null,r=null,i=null;for(var s=0;s<e.length;s++){var o=e[s];for(var u=0;u<o.length;u++){var a=o[u];for(var f=0;f<a.length;f++){var l=a[f],c=l[0],h=l[1];t===null?t=c:c<t&&(t=c),n===null?n=c:c>n&&(n=c),r===null?r=h:h<r&&(r=h),i===null?i=h:h>i&&(i=h)}}}return[t,r,n,i]}function p(e){var t=null,n=null,r=null,i=null;for(var s=0;s<e.length;s++){var o=e[s],u=o[0],a=o[1];t===null?t=u:u<t&&(t=u),n===null?n=u:u>n&&(n=u),r===null?r=a:a<r&&(r=a),i===null?i=a:a>i&&(i=a)}return[t,r,n,i]}function d(e){var t=[],n;for(var r=e.features.length-1;r>=0;r--)n=l(e.features[r].geometry),t.push([n[0],n[1]]),t.push([n[2],n[3]]);return p(t)}function v(e){var t=[],n;for(var r=e.geometries.length-1;r>=0;r--)n=l(e.geometries[r]),t.push([n[0],n[1]]),t.push([n[2],n[3]]);return p(t)}function m(e){var t=l(e);return{x:t[0],y:t[1],w:Math.abs(t[0]-t[2]),h:Math.abs(t[1]-t[3])}}function g(e){return e*n}function y(e){return e*r}function b(e,t){for(var n=0;n<e.length;n++)typeof e[n][0]=="number"&&(e[n]=t(e[n])),typeof e[n]=="object"&&(e[n]=b(e[n],t));return e}function w(e){var n=e[0],r=e[1];return[g(n/t)-Math.floor((g(n/t)+180)/360)*360,g(Math.PI/2-2*Math.atan(Math.exp(-1*r/t)))]}function E(e){var n=e[0],r=Math.max(Math.min(e[1],89.99999),-89.99999);return[y(n)*t,t/2*Math.log((1+Math.sin(y(r)))/(1-Math.sin(y(r))))]}function S(e,t,n){if(e.type==="Point")e.coordinates=t(e.coordinates);else if(e.type==="Feature")e.geometry=S(e.geometry,t,!0);else if(e.type==="FeatureCollection")for(var r=0;r<e.features.length;r++)e.features[r]=S(e.features[r],t,!0);else if(e.type==="GeometryCollection")for(var s=0;s<e.geometries.length;s++)e.geometries[s]=S(e.geometries[s],t,!0);else e.coordinates=b(e.coordinates,t);return n||t===E&&(e.crs=i),t===w&&delete e.crs,e}function x(e){return S(e,E)}function T(e){return S(e,w)}function N(e,t){return e<t?-1:e>t?1:0}function C(e,t,n){return N((t[0]-e[0])*(n[1]-e[1])-(n[0]-e[0])*(t[1]-e[1]),0)}function k(e,t){var n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r}function L(e,t){var n=t;for(var r in e){var i=C(t,n,e[r]);if(i===-1||i===0&&k(t,e[r])>k(t,n))n=e[r]}return n}function A(e){function t(e,t){return e[0]-t[0]>e[1]-t[1]?1:e[0]-t[0]<e[1]-t[1]?-1:0}if(e.length===0)return[];if(e.length===1)return e;var n=[e.sort(t)[0]];for(var r=0;r<n.length;r++){var i=L(e,n[r]);i!==n[0]&&n.push(i)}return n}function O(e,t){var n=!1;for(var r=-1,i=e.length,s=i-1;++r<i;s=r)(e[r][1]<=t[1]&&t[1]<e[s][1]||e[s][1]<=t[1]&&t[1]<e[r][1])&&t[0]<(e[s][0]-e[r][0])*(t[1]-e[r][1])/(e[s][1]-e[r][1])+e[r][0]&&(n=!0);return n}function M(e,t){if(e&&e.length){if(e.length===1)return O(e[0],t);if(O(e[0],t)){for(var n=1;n<e.length;n++)if(O(e[n],t))return!1;return!0}return!1}return!1}function _(e,t,n,r){var i=(r[0]-n[0])*(e[1]-n[1])-(r[1]-n[1])*(e[0]-n[0]),s=(t[0]-e[0])*(e[1]-n[1])-(t[1]-e[1])*(e[0]-n[0]),o=(r[1]-n[1])*(t[0]-e[0])-(r[0]-n[0])*(t[1]-e[1]);if(o!==0){var u=i/o,a=s/o;if(0<=u&&u<=1&&0<=a&&a<=1)return!0}return!1}function D(e,t){for(var n=0;n<e.length-1;n++)for(var r=0;r<t.length-1;r++)if(_(e[n],e[n+1],t[r],t[r+1]))return!0;return!1}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];for(var i=0;i<r.length-1;i++)for(var s=0;s<e.length-1;s++)if(_(r[i],r[i+1],e[s],e[s+1]))return!0}return!1}function H(e,t){for(var n=0;n<e.length;n++)if(P(e[n],t))return!0;return!1}function B(e,t){for(var n=0;n<t.length;n++)return P(e,t[n])?!0:!1}function j(e,t){for(var n=0;n<e.length;n++)return B(e[n],t)?!0:!1}function F(e,t){for(var n=0;n<e.length;n++)return j(e[n],t)?!0:!1}function I(e){var t=[];for(var n=0;n<e.length;n++){var r=e[n].slice();q(r[0],r[r.length-1])===!1&&r.push(r[0]),t.push(r)}return t}function q(e,t){for(var n=0;n<e.length;n++)for(var r=0;r<t.length;r++)if(e[n]!==t[r])return!1;return!0}function U(e){if(e)switch(e.type){case"Point":return new z(e);case"MultiPoint":return new W(e);case"LineString":return new X(e);case"MultiLineString":return new V(e);case"Polygon":return new $(e);case"MultiPolygon":return new J(e);case"Feature":return new K(e);case"FeatureCollection":return new Q(e);case"GeometryCollection":return new G(e);default:throw new Error("Unknown type: "+e.type)}}function z(e){var t=Array.prototype.slice.call(arguments);if(e&&e.type==="Point"&&e.coordinates)a(this,e);else if(e&&Array.isArray(e))this.coordinates=e;else{if(!(t.length>=2))throw"Terraformer: invalid input for Terraformer.Point";this.coordinates=t}this.type="Point",this.__defineGetter__("bbox",function(){return l(this)})}function W(e){if(e&&e.type==="MultiPoint"&&e.coordinates)a(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.MultiPoint";this.coordinates=e}this.type="MultiPoint",this.__defineGetter__("bbox",function(){return l(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function X(e){if(e&&e.type==="LineString"&&e.coordinates)a(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.LineString";this.coordinates=e}this.type="LineString",this.__defineGetter__("bbox",function(){return l(this)})}function V(e){if(e&&e.type==="MultiLineString"&&e.coordinates)a(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.MultiLineString";this.coordinates=e}this.type="MultiLineString",this.__defineGetter__("bbox",function(){return l(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function $(e){if(e&&e.type==="Polygon"&&e.coordinates)a(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.Polygon";this.coordinates=e}this.type="Polygon",this.__defineGetter__("bbox",function(){return l(this)})}function J(e){if(e&&e.type==="MultiPolygon"&&e.coordinates)a(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.MultiPolygon";this.coordinates=e}this.type="MultiPolygon",this.__defineGetter__("bbox",function(){return l(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function K(e){if(e&&e.type==="Feature"&&e.geometry)a(this,e);else{if(!(e&&e.type&&e.coordinates))throw"Terraformer: invalid input for Terraformer.Feature";this.geometry=e}this.type="Feature",this.__defineGetter__("bbox",function(){return l(this)})}function Q(e){if(e&&e.type==="FeatureCollection"&&e.features)a(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.FeatureCollection";this.features=e}this.type="FeatureCollection",this.__defineGetter__("length",function(){return this.features?this.features.length:0}),this.__defineGetter__("bbox",function(){return l(this)})}function G(e){if(e&&e.type==="GeometryCollection"&&e.geometries)a(this,e);else if(Array.isArray(e))this.geometries=e;else{if(!e.coordinates||!e.type)throw"Terraformer: invalid input for Terraformer.GeometryCollection";this.type="GeometryCollection",this.geometries=[e]}this.type="GeometryCollection",this.__defineGetter__("length",function(){return this.geometries?this.geometries.length:0}),this.__defineGetter__("bbox",function(){return l(this)})}function Y(e,t,n){var r=E(e),i=n||64,s=t||250,o={type:"Polygon",coordinates:[[]]};for(var u=1;u<=i;u++){var a=u*(360/i)*Math.PI/180;o.coordinates[0].push([r[0]+s*Math.cos(a),r[1]+s*Math.sin(a)])}return T(o)}function Z(e,t,n){var r=n||64,i=t||250;if(!e||e.length<2||!i||!r)throw new Error("Terraformer: missing parameter for Terraformer.Circle");a(this,new K({type:"Feature",geometry:Y(e,i,r),properties:{radius:i,center:e,steps:r}})),this.__defineGetter__("bbox",function(){return l(this)}),this.__defineGetter__("radius",function(){return this.properties.radius}),this.__defineSetter__("radius",function(e){this.properties.radius=e,this.recalculate()}),this.__defineGetter__("steps",function(){return this.properties.steps}),this.__defineSetter__("steps",function(e){this.properties.steps=e,this.recalculate()}),this.__defineGetter__("center",function(){return this.properties.center}),this.__defineSetter__("center",function(e){this.properties.center=e,this.recalculate()})}var e={},t=6378137,n=57.29577951308232,r=.017453292519943,i={type:"link",properties:{href:"http://spatialreference.org/ref/sr-org/6928/ogcwkt/",type:"ogcwkt"}},s={type:"link",properties:{href:"http://spatialreference.org/ref/epsg/4326/ogcwkt/",type:"ogcwkt"}};o.prototype={then:function(e,t){return this._thens.push({resolve:e,reject:t}),this},resolve:function(e){return this._complete("resolve",e),this},reject:function(e){return this._complete("reject",e),this},_complete:function(e,t){this.then=e==="resolve"?function(e,n){e(t)}:function(e,n){n(t)},this.resolve=this.reject=function(){throw new Error("Deferred already completed.")};for(var n=0;n<this._thens.length;n++){var r=this._thens[n];r[e]&&r[e](t)}delete this._thens}};var R=["length","bbox"];return U.prototype={toMercator:function(){return x(this)},toGeographic:function(){return T(this)},envelope:function(){var e=l(this);return{x:e[0],y:e[1],w:Math.abs(e[0]-e[2]),h:Math.abs(e[1]-e[3])}},convexHull:function(){var e=[],t,n;if(this.type==="Point")return this.coordinates&&this.coordinates.length>0?[this.coordinates]:[];if(this.type==="LineString"||this.type==="MultiPoint"){if(!(this.coordinates&&this.coordinates.length>0))return[];e=this.coordinates}else if(this.type==="Polygon"||this.type==="MultiLineString"){if(!(this.coordinates&&this.coordinates.length>0))return[];for(t=0;t<this.coordinates.length;t++)e=e.concat(this.coordinates[t])}else{if(this.type!=="MultiPolygon")throw new Error("Unable to get convex hull of "+this.type);if(!(this.coordinates&&this.coordinates.length>0))return[];for(t=0;t<this.coordinates.length;t++)for(n=0;n<this.coordinates[t].length;n++)e=e.concat(this.coordinates[t][n])}return A(e)},toJSON:function(){var e={};for(var t in this)this.hasOwnProperty(t)&&this[t]&&R.indexOf(t)&&(e[t]=this[t]);return e.bbox=l(this),e},toJson:function(){return JSON.stringify(this)}},U.prototype.intersects=function(e){e.type==="Feature"&&(e=e.geometry);if(this.type==="LineString"){if(e.type==="LineString")return D(this.coordinates,e.coordinates);if(e.type==="MultiLineString")return P(this.coordinates,e.coordinates);if(e.type==="Polygon")return P(this.coordinates,I(e.coordinates));if(e.type==="MultiPolygon")return B(this.coordinates,e.coordinates)}else if(this.type==="MultiLineString"){if(e.type==="LineString")return P(e.coordinates,this.coordinates);if(e.type==="Polygon"||e.type==="MultiLineString")return H(this.coordinates,e.coordinates);if(e.type==="MultiPolygon")return j(this.coordinates,e.coordinates)}else if(this.type==="Polygon"){if(e.type==="LineString")return P(e.coordinates,I(this.coordinates));if(e.type==="MultiLineString")return H(I(this.coordinates),e.coordinates);if(e.type==="Polygon")return H(I(this.coordinates),I(e.coordinates));if(e.type==="MultiPolygon")return j(I(this.coordinates),e.coordinates)}else if(this.type==="MultiPolygon"){if(e.type==="LineString")return B(e.coordinates,this.coordinates);if(e.type==="Polygon"||e.type==="MultiLineString")return j(I(e.coordinates),this.coordinates);if(e.type==="MultiPolygon")return F(this.coordinates,e.coordinates)}else if(this.type==="Feature"){var t=new U(this.geometry);return t.intersects(e)}return u("Type "+this.type+" to "+e.type+" intersection is not supported by intersects"),!1},z.prototype=new U,z.prototype.constructor=z,W.prototype=new U,W.prototype.constructor=W,W.prototype.forEach=function(e){for(var t=0;t<this.length;t++)e.apply(this,[this.coordinates[t],t,this.coordinates]);return this},W.prototype.addPoint=function(e){return this.coordinates.push(e),this},W.prototype.insertPoint=function(e,t){return this.coordinates.splice(t,0,e),this},W.prototype.removePoint=function(e){return typeof e=="number"?this.coordinates.splice(e,1):this.coordinates.splice(this.coordinates.indexOf(e),1),this},W.prototype.get=function(e){return new z(this.coordinates[e])},X.prototype=new U,X.prototype.constructor=X,X.prototype.addVertex=function(e){return this.coordinates.push(e),this},X.prototype.insertVertex=function(e,t){return this.coordinates.splice(t,0,e),this},X.prototype.removeVertex=function(e){return this.coordinates.splice(e,1),this},V.prototype=new U,V.prototype.constructor=V,V.prototype.forEach=function(e){for(var t=0;t<this.coordinates.length;t++)e.apply(this,[this.coordinates[t],t,this.coordinates])},V.prototype.get=function(e){return new X(this.coordinates[e])},$.prototype=new U,$.prototype.constructor=$,$.prototype.addVertex=function(e){return this.coordinates[0].push(e),this},$.prototype.insertVertex=function(e,t){return this.coordinates[0].splice(t,0,e),this},$.prototype.removeVertex=function(e){return this.coordinates[0].splice(e,1),this},$.prototype.contains=function(e){if(e.type==="Point")return M(this.coordinates,e.coordinates);if(e.type==="Polygon"){if(e.coordinates.length>0&&e.coordinates[0].length>0&&M(this.coordinates,e.coordinates[0][0])===!0&&this.intersects(e)===!1)return!0}else if(e.type==="MultiPolygon"&&e.coordinates.length>0)for(var t=0;t<e.coordinates.length;t++)if(e.coordinates[t][0].length>0&&M(this.coordinates,e.coordinates[t][0][0])===!0&&this.intersects({type:"Polygon",coordinates:e.coordinates[t]})===!1)return!0;return!1},J.prototype=new U,J.prototype.constructor=J,J.prototype.forEach=function(e){for(var t=0;t<this.coordinates.length;t++)e.apply(this,[this.coordinates[t],t,this.coordinates])},J.prototype.contains=function(e){if(e.type!=="Point")throw new Error("Only points are supported");for(var t=0;t<this.coordinates.length;t++)if(M(this.coordinates[t],e.coordinates))return!0;return!1},J.prototype.get=function(e){return new $(this.coordinates[e])},K.prototype=new U,K.prototype.constructor=K,K.prototype.contains=function(e){if(e.type!=="Point")throw new Error("Only points are supported");if(!this.geometry.type.match(/Polygon/))throw new Error("Only features containing Polygons and MultiPolygons are supported");if(this.geometry.type==="MultiPolygon")for(var t=0;t<this.geometry.coordinates.length;t++)if(M(this.geometry.coordinates[t],e.coordinates))return!0;return this.geometry.type==="Polygon"?M(this.geometry.coordinates,e.coordinates):!1},Q.prototype=new U,Q.prototype.constructor=Q,Q.prototype.forEach=function(e){for(var t=0;t<this.features.length;t++)e.apply(this,[this.features[t],t,this.features])},Q.prototype.get=function(e){var t;return this.forEach(function(n){n.id===e&&(t=n)}),new K(t)},G.prototype=new U,G.prototype.constructor=G,G.prototype.forEach=function(e){for(var t=0;t<this.geometries.length;t++)e.apply(this,[this.geometries[t],t,this.geometries])},G.prototype.get=function(e){return new U(this.geometries[e])},Z.prototype=new U,Z.prototype.constructor=Z,Z.prototype.recalculate=function(){return this.geometry=Y(this.center,this.radius,this.steps),this},Z.prototype.contains=function(e){if(e.type!=="Point")throw new Error("Only points are supported");return M(this.geometry.coordinates,e.coordinates)},Z.prototype.toJSON=function(){var e=U.prototype.toJSON.call(this);return e.properties.center=e.center,e.properties.steps=e.steps,e.properties.radius=e.radius,delete e.center,delete e.steps,delete e.radius,e},e.Primitive=U,e.Point=z,e.MultiPoint=W,e.LineString=X,e.MultiLineString=V,e.Polygon=$,e.MultiPolygon=J,e.Feature=K,e.FeatureCollection=Q,e.GeometryCollection=G,e.Circle=Z,e.toMercator=x,e.toGeographic=T,e.Tools={},e.Tools.positionToMercator=E,e.Tools.positionToGeographic=w,e.Tools.applyConverter=S,e.Tools.toMercator=x,e.Tools.toGeographic=T,e.Tools.createCircle=Y,e.Tools.calculateBounds=l,e.Tools.calculateEnvelope=m,e.Tools.coordinatesContainPoint=O,e.Tools.polygonContainsPoint=M,e.Tools.convexHull=A,e.MercatorCRS=i,e.GeographicCRS=s,e.Deferred=o,e});